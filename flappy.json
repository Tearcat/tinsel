{
	"start": "flappy",
	"story": {
		"flappy": {
			"content": [
				"Welcome to phoney bird. Once the game starts, press 1 to flap.",
				{
					"type": "redirect",
					"text": "start"
				}
			]
		},
		"start": {
			"content": function(opts) {
				delete opts.choice;
				opts.score = 0;
				opts.first = true;
				opts.height = 2;

				var redirect = {
					type: "redirect",
					text: "recurse"
				};
				return [redirect, opts];
			}
		},
		"recurse": {
			"content": function(opts) {
				opts.height = parseInt(opts.height)
				opts.score = parseInt(opts.score)
				opts.pipeHeight = parseInt(opts.pipeHeight)

				var pluralizePoints = function(points) {
					if (points == 1) return "point";
					return "points";
				}

				var heightString = function(height) {
					if (height == 0) return "low";
					if (height == 1) return "medium";
					if (height == 2) return "high";
					return "unknown";
				}

				var c = [];

				if (opts.height > 0) {
					opts.height -= 1;
				}

				if (opts.height > 2) {
					opts.height = 2;
				}

				if (opts.first) {
					opts.first = false;
				} else {
					if (opts.height != opts.pipeHeight) {
						var redirect = {
							type: 'redirect',
							text: 'gameover'
						}
						return [redirect, opts];
					}

					opts.score++;
					c.push("" + opts.score + " " + pluralizePoints(opts.score) + ".");
				}

				opts.pipeHeight = Math.floor(Math.random() * 3);

				c.push("You are flying at a " + heightString(opts.height) + " height. A pipe is approaching with a " + heightString(opts.pipeHeight) + " height.");

				return [c, opts];
			},
			"routes": {
				"1": "flap",
				"default": "recurse",
				"timeout": "recurse"
			},
			"gatherOptions": {
				"timeout": 2
			}
		},
		"flap": {
			"content": function(opts) {
				opts.height = parseInt(opts.height) + 2;
				return [{type: 'redirect', text: 'recurse'}, opts];
			}
		},
		"gameover": {
			"content": function(opts) {
				var pluralizePoints = function(points) {
					if (points == 1) return "point";
					return "points";
				}

				return ["You have lost. Your final score is " + opts.score + " " + pluralizePoints(opts.score) + ". Press 1 to play again.", opts];
			},
			"routes": {
				1: "start",
				"timeout": "thanks"
			},
			"gatherOptions": {
				"timeout": 3
			}
		},
		"thanks": {
			"content": [
				"Thank you for playing!", 
				{"type": "pause", "length": 2}
			]
		}
	}
}